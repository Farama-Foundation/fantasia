__author__ = "Sander Schulhoff"
__email__ = "sanderschulhoff@gmail.com"

import sys
import os
sys.path.append("..")
menu = ["API", "Vector API", "environments", 
"Environment Creation", "Wrappers", 
"Spaces", "Third Party Environments",
]

ret = "#AUTOGENERATED: EDIT gen_menus in _scripts\n"
for item in menu:
    if item != "environments":
        link = item.replace(" ", "_").lower()
        file = open(f"../pages/{link}/index.md", "r")
        text = file.read()
        splits = text.split("##")
        headers = []
        for chunk in splits:
            header = chunk.split("\n")[0].replace("#", "", 1).strip()
            headers.append(header)
        
        headers = headers[1:]

        ret+= f"- title: {item}\n"
        link = item.replace(" ", "_").lower()
        ret+= f"  path: /{link}\n"
        if len(headers) > 0:
            ret+= "  sublinks: \n"
            for header in headers:
                ret+= f"    - title: \"{header}\"\n"
                link = header.replace(" ", "-").lower()
                ret+= f"      path: \"#{link}\"\n"

        ret+= "\n"
    # find environments :)
    else:
        ret+= "- title: Environments\n"
        ret+= "  path: /environments\n"
        ret+= "  sublinks:\n"
        
        dir = "../pages/environments"
        for filename in os.listdir(dir):
            f = os.path.join(dir, filename)
            # check if sub directory
            if os.path.isdir(f):
                env_type = os.path.basename(f)
                path = f"/{env_type}"
                if env_type == "box2d":
                    env_type_title = "Box2D"
                else:
                    env_type_title = env_type.replace("_", " ").title()
                ret+= f"   - title: \"{env_type_title}\"\n"
                ret+= f"     path: \"{path}\"\n"
                gif = os.path.join(f, "videos", os.listdir(os.path.join(f, "videos"))[0]).replace("pages/", "")
                ret+= f"     image: {gif}\n"
                ret+= f"     subsublinks: \n"
                # go through environments
                for env_path in os.listdir(f):
                    # check extension
                    if env_path[-3:] == ".md" and env_path != "index.md":
                        env_path = env_path[:-3]
                        env_title = env_path.replace("_", " ").title()
                        env_path = "/" + env_path
                        ret+= f"     - title: \"{env_title}\"\n"
                        ret+= f"       path: \"{env_path}\"\n"

ret+= "#AUTOGENERATION ENDED"

print(ret)